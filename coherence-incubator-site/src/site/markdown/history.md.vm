History
-------

The following sections outline Oracle Coherence Incubator changes in 
reverse chronological order.

<h3>Version ${project.version} built on ${timestamp} </h3>

<h4>Source and Documentation Contributors</h4>

*   Luk Ho

<h4>Global and Cross-Module Changes</h4>

*   No Changes

<h4>coherence-processingpattern</h4>

*   [Issue #169](https://github.com/coherence-community/coherence-incubator/issues/169):
    Fixed an issue when there are multiple processing servers in a cluster, shutdown down one of them may cause task execution to hang.


--------------------------------------------------------------------------------

<h3>Version 13.0.0 built on 2017-08-30 20:50 </h3>

<h4>Source and Documentation Contributors</h4>

*   Brian Oliver

<h4>Global and Cross-Module Changes</h4>

*   Coherence Incubator 13 is based on Coherence 12, upgrade to require Coherence 12.2.x+.

*   Coherence Incubator 13 deprecates the following modules/patterns as equivalent and/or
    more advanced functionality is now available in Coherence itself.   The deprecated
    modules include:

    JVisualVM Plugin (now shipped with Coherence)
    Push Replication Pattern (see Coherence Federated Caching)
    Event Distribution Pattern (previously used by the new deprecated Push Replication Pattern)
    Processing Pattern (no longer supported)

*   [Issue #166](https://github.com/coherence-community/coherence-incubator/issues/166):
    Updated pom.xml files to support publishing to Maven Central instead of maven.java.net

<h4>coherence-common</h4>

*   [Issue #164](https://github.com/coherence-community/coherence-incubator/issues/164):
    Introduced the ability to use introduce-cache-config with interceptors.

<h4>coherence-processingpattern</h4>

*   [Issue #49](https://github.com/coherence-community/coherence-incubator/issues/49):
    Resolved inappropriate use of CacheFactory.ensureCluster(), replacing with CacheFactory.getCluster().

*   [Issue #159](https://github.com/coherence-community/coherence-incubator/issues/159):
    Introduced ability to provide a ConfigurableCacheFactory when creating a ProcessingSession.

*   [Issue #160](https://github.com/coherence-community/coherence-incubator/issues/160):
    Ensure consistent use of ClassLoaders based on calling context.

*   [Issue #161](https://github.com/coherence-community/coherence-incubator/issues/161):
    Ensure Processing Pattern is initialized using the Cache Configuration LifecycleEvents.

*   [Issue #162](https://github.com/coherence-community/coherence-incubator/issues/162):
    Introduce Shared ExecutorService for internal background tasks.

*   [Issue #163](https://github.com/coherence-community/coherence-incubator/issues/163):
    Resolves fail-over/fail-back of Grid-based Tasks.

--------------------------------------------------------------------------------
